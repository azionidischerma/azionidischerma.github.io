{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","enablePersistence","catch","err","code","theme","createMuiTheme","palette","background","default","primary","main","secondary","status","danger","typography","h2","color","h1","h5","h6","responsiveFontSizes","useStyles","makeStyles","root","flexGrow","menuButton","marginRight","spacing","title","Barra","props","classes","AppBar","position","elevation","Toolbar","Typography","variant","className","onClick","setSchermataMaestro","schermataMaestro","Button","style","IconButton","aria-label","signOut","Atleti","Azioni","Grid","container","direction","justify","alignItems","minHeight","item","xs","marginTop","Finestra","Paper","margin","right","chiudiFinestra","cosa","Maestro","state","isSignedIn","numeroInput","erroreInputSocieta","nomeSocieta","listaMosse","listaTempi","snackOpen","snackMessage","azioni","atleti","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","handleClose","event","reason","setState","aggiungiMossa","key","text","map","v","chiave","includes","cambio","testo","concat","aggiungiTempo","salva","length","console","log","this","unregisterAuthObserver","onAuthStateChanged","user","minWidth","sm","currentUser","displayName","height","size","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message","action","Fragment","fontSize","firebaseAuth","React","Component","CambiaMossa","interval","setInterval","time","Date","now","clearInterval","mosse","Math","floor","random","Mossa","useState","setMosse","db","collection","doc","get","then","exists","data","lista","withStyles","InputLabelProps","formMosse","fullWidth","borderBottom","ThemeProvider","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.976d1e72.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nimport PropTypes from \"prop-types\";\n\n// Material\nimport { createMuiTheme, makeStyles, ThemeProvider, responsiveFontSizes, withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Fab from '@material-ui/core/Fab';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Paper from '@material-ui/core/Paper';\nimport Modal from '@material-ui/core/Modal';\n\nimport * as firebase from \"firebase/app\";\nimport '@firebase/firestore'\nimport 'firebaseui'\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCe8mQ5RcM_tm7LPvM1kxbJ211Fq7G3fFA\",\n  authDomain: \"scherma-d21ad.firebaseapp.com\",\n  databaseURL: \"https://scherma-d21ad.firebaseio.com\",\n  projectId: \"scherma-d21ad\",\n  storageBucket: \"scherma-d21ad.appspot.com\",\n  messagingSenderId: \"720411353134\",\n  appId: \"1:720411353134:web:d7c17466ebf51edc34ffbf\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().enablePersistence()\n  .catch(function(err) {\n      if (err.code === 'failed-precondition') {\n          // Multiple tabs open, persistence can only be enabled\n          // in one tab at a a time.\n          // ...\n      } else if (err.code === 'unimplemented') {\n          // The current browser does not support all of the\n          // features required to enable persistence\n          // ...\n      }\n  });\n\nlet theme = createMuiTheme({\n  palette: {\n    background: {\n      default: \"#282c34\"\n    },\n    primary: { main: '#282c34' },\n    secondary: { main: '#ffffff' },\n  },\n  status: {\n    danger: 'orange',\n  },\n  typography: {\n    h2: {\n      color: \"#fed111\"\n    },\n    h1: {\n      color: \"#fed111\"\n    },\n    h5: {\n      color: \"white\"\n    },\n    h6: {\n      color: \"white\"\n    },\n  },\n});\ntheme = responsiveFontSizes(theme);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst styles = {\n  InputLabelProps: {\n    color: \"white\"\n  },\n  formMosse: {\n    color: \"white\",\n    fullWidth: true,\n    borderBottom: '2px solid white',\n    '&:after': {\n      // The MUI source seems to use this but it doesn't work\n      borderBottom: '2px solid white',\n    },\n  }\n};\n\nfunction Barra(props) {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"fixed\" color=\"primary\" elevation={0}>\n      <Toolbar>\n        <Typography variant=\"h6\" className={classes.title} onClick={() => props.setSchermataMaestro(false)}>\n          Scherma\n        </Typography>\n        {props.schermataMaestro ? \n        <><Button style={{color:\"white\"}} onClick={() => props.setSchermataMaestro(false)}>Home</Button>\n        <IconButton style={{color:\"white\"}} aria-label=\"logout\" onClick={() => { firebase.auth().signOut() }}>\n          <ExitToAppIcon />\n        </IconButton></>:\n        <Button style={{color:\"white\"}} onClick={() => props.setSchermataMaestro(true)}>Maestro</Button>\n        }\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nfunction Atleti(props){\n  return (\n    <div>Ciao atleti</div>\n  )\n}\n\n// function Azioni(){\n//   return (\n//     <Paper style={{ minHeight: '90vh' }}>\n//       <Grid\n//             container\n//             direction=\"column\"\n//             justify=\"center\"\n//             alignItems=\"center\"\n//             style={{ minHeight: '100vh' }}\n//           >\n//             <Grid item xs={3} justify=\"flex-start\" alignItems=\"flex-start\" style={{marginTop: \"20px\"}}>\n//             <TextField\n//               id=\"outlined-secondary\"\n//               label=\"Nome sequenza\"\n//               variant=\"outlined\"\n//               color=\"primary\"\n//               required={true}\n//               error={this.state.erroreInputSocieta}\n//               onChange={(e) => this.setState({ nomeSocieta: e.target.value })}\n//             />\n//             </Grid>\n//             <Grid item xs={6} justify=\"center\" alignItems=\"center\">\n//               <Grid\n//               container\n//               direction=\"row\"\n//               justify=\"center\"\n//               alignItems=\"center\"\n//               >\n//                 <Grid item xs={6} justify=\"center\" alignItems=\"center\">\n//                   {Array(this.state.numeroInput).fill(1).map((x, y) => x + y - 1).map((chiave) =>\n//                     (<Grid\n//                       container\n//                       direction=\"row\"\n//                       justify=\"center\"\n//                       alignItems=\"center\"\n//                       spacing={1}\n//                     >\n//                       <Grid item xs={6} justify=\"center\" alignItems=\"center\">\n//                         <TextField \n//                         id=\"azione\" \n//                         label=\"Azione\" \n//                         onChange={(e) => this.aggiungiMossa(chiave, e.target.value)}\n//                         InputLabelProps={{color:\"primary\"}} \n//                         InputProps={{  className: this.props.classes.formMosse }}\n//                         />\n//                       </Grid>\n//                       <Grid item xs={6} justify=\"center\" alignItems=\"center\">\n//                         <TextField \n//                         id=\"tempo\" \n//                         label=\"Tempo\" \n//                         onChange={(e) => this.aggiungiTempo(chiave, e.target.value)}\n//                         InputLabelProps={this.props.classes.InputLabelProps} \n//                         InputProps={{  className: this.props.classes.formMosse }}\n//                         />\n//                       </Grid>\n//                     </Grid>)\n//                   )}\n//                 </Grid>\n//               </Grid>\n//             </Grid>\n//             <Grid item xs={3} justify=\"flex-end\" alignItems=\"flex-end\" style={{marginTop: \"20px\"}}>\n//               <IconButton style={{color:\"white\"}} aria-label=\"aggiungi\" onClick={() => this.setState({ numeroInput: this.state.numeroInput + 1 }) }>\n//                 <AddCircleIcon />\n//               </IconButton>\n//             </Grid>\n//           </Grid>\n//     </Paper>\n//   )\n// }\n\nfunction Azioni(props){\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"center\"\n      alignItems=\"center\"\n      style={{ minHeight: '80vh' }}\n    >\n     <Grid item xs={6} justify=\"flex-end\" alignItems=\"flex-end\" style={{marginTop: \"20px\"}}> \n        ciao\n     </Grid>\n    </ Grid>\n  )\n}\n\nfunction Finestra(props){\n  return (\n    <div className=\"App\">\n        <div className=\"App-body\">\n          <Paper style={{margin:\"60px\", marginTop:\"80px\", minHeight:\"80vh\"}}>\n          <IconButton style={{color:\"black\", position:\"fixed\", right:\"60px\"}} aria-label=\"logout\" onClick={() => { props.chiudiFinestra() }}>\n            <CloseIcon />\n          </IconButton>\n            {props.cosa == \"atleti\" ? <Atleti /> : <Azioni/>}\n          </Paper>\n        </div>\n    </div>\n  )\n}\n\nclass Maestro extends React.Component {\n// The component's Local state.\nstate = {\n  isSignedIn: false, // Local signed-in state.\n  numeroInput: 1,\n  erroreInputSocieta: false,\n  nomeSocieta:\"\",\n  listaMosse:[],\n  listaTempi:[],\n  snackOpen: false,\n  snackMessage: \"\",\n  azioni: false,\n  atleti: false\n};\n\n// Configure FirebaseUI.\nuiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n  ],\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\n// Listen to the Firebase Auth state and set the local state.\ncomponentDidMount() {\n  this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n    (user) => this.setState({ isSignedIn: !!user })\n  );\n}\n\n// Make sure we un-register Firebase observers when the component unmounts.\ncomponentWillUnmount() {\n  this.unregisterAuthObserver();\n}\n\nhandleClose = (event, reason) => {\n  if (reason === 'clickaway') {\n    return;\n  }\n\n  this.setState({snackOpen:false})\n};\n\nchiudiFinestra = () => {\n  this.setState({azioni : false, atleti: false})\n}\n\naggiungiMossa = (key, text) => {\n  try{\n    if(this.state.listaMosse.map((v) => v.chiave).includes(key)){\n      let cambio = this.state.listaMosse;\n      cambio[key].testo = text;\n      this.setState({listaMosse: cambio});\n    } else {\n      this.setState({listaMosse: this.state.listaMosse.concat({chiave: key, testo: text})})\n    }\n   } catch (err) {\n    this.setState({listaMosse: this.state.listaMosse.concat({chiave: key, testo: text})})\n  }\n}\n\naggiungiTempo = (key, text) => {\n  try{\n    if(this.state.listaTempi.map((v) => v.chiave).includes(key)){\n      let cambio = this.state.listaTempi;\n      cambio[key].testo = text;\n      this.setState({listaTempi: cambio});\n    } else {\n      this.setState({listaTempi: this.state.listaTempi.concat({chiave: key, testo: text})})\n    }\n   } catch (err) {\n    this.setState({listaTempi: this.state.listaTempi.concat({chiave: key, testo: text})})\n  }\n}\n\nsalva = () => {\n  if(this.state.nomeSocieta === \"\"){\n    this.setState({erroreInputSocieta:true})\n    return\n  } else {\n    this.setState({erroreInputSocieta:false})\n  }\n  if(this.state.listaMosse.length !== this.state.listaTempi.length){\n    this.setState({snackOpen:true, snackMessage:\"Mancano delle mosse o dei tempi.\"})\n    return\n  }\n  this.setState({snackOpen:true, snackMessage:\"Salvato.\"})\n  console.log(this.state.listaMosse)\n  console.log(this.state.listaTempi)\n  return\n}\n\nrender() {\n  if (this.state.azioni){\n    return <Finestra cosa=\"azioni\" chiudiFinestra={this.chiudiFinestra}/>\n  }\n  if (this.state.atleti){\n    return <Finestra cosa=\"atleti\" chiudiFinestra={this.chiudiFinestra}/>\n  }\n  if (!this.state.isSignedIn) {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()} />\n        </header>\n      </div>\n    );\n  }\n  else {\n    return (\n      <div className=\"App\">\n        <div className=\"App-body\">\n          {/* <Fab color=\"primary\" aria-label=\"add\" onClick={() => this.salva()} style={{position:\"fixed\", right: \"20px\",bottom:\"20px\"}}>\n            <SaveIcon />\n          </Fab> */}\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n            style={{ minHeight: '100vh', minWidth: '100vw' }}\n          >\n            <Grid item xs={12} sm={6} justify=\"center\" alignItems=\"center\">\n              <Typography variant=\"h4\">Benvenuto {firebase.auth().currentUser.displayName}</Typography>\n            </Grid>\n            <Grid item xs={3} justify=\"center\" alignItems=\"center\">\n              <div style={{height:\"40px\"}}/>\n            </Grid>\n            <Grid item xs={12} sm={6} justify=\"center\" alignItems=\"center\">\n              <Grid\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              spacing={3}\n              >\n                <Grid item xs={6} justify=\"center\" alignItems=\"center\">\n                  <Button variant=\"contained\" color=\"secondary\" size=\"large\" onClick={() => this.setState({azioni:true})}>\n                    Azioni\n                  </Button>\n                </Grid>\n                <Grid item xs={6} justify=\"center\" alignItems=\"center\">\n                  <Button variant=\"contained\" color=\"secondary\" size=\"large\" onClick={() => this.setState({atleti:true})}>\n                    Atleti\n                  </Button>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.snackOpen}\n          autoHideDuration={10000}\n          onClose={this.handleClose}\n          message={this.state.snackMessage}\n          action={\n            <React.Fragment>\n              <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.handleClose}>\n                <CloseIcon fontSize=\"small\" />\n              </IconButton>\n            </React.Fragment>\n          }\n        />\n      </div>\n    )\n  }\n}\n}\n\nclass CambiaMossa extends React.Component {\n  componentDidMount() {\n    this.interval = setInterval(() => this.setState({ time: Date.now() }), 1500);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  render(){\n    return <p>{this.props.mosse[Math.floor(Math.random() * this.props.mosse.length)]}</p>\n  }\n}\n\nfunction Mossa() {\n  const [mosse, setMosse] = useState([\"caricamento...\"]);\n  const db = firebase.firestore();\n  if (mosse[0] === \"caricamento...\"){\n    var mosseRef = db.collection(\"mosse\");\n    mosseRef.doc(\"oueHRRQQ7wt6sV087Ynl\").get()\n    .then(doc => {\n      if (!doc.exists) {\n        console.log('No such document!');\n      } else {\n        setMosse(doc.data().lista);\n      }\n    })\n    .catch(err => {\n      console.log('Error getting document', err);\n    });\n\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <CambiaMossa mosse={mosse} />\n      </header>\n    </div>\n    )\n }\n\n\nfunction App(props) {\n  const [schermataMaestro, setSchermataMaestro] = useState(false);\n  const { classes } = props;\n  return (\n    <div>\n      <ThemeProvider theme={theme}>\n        <Barra schermataMaestro={schermataMaestro} setSchermataMaestro={setSchermataMaestro}/>\n          {schermataMaestro ? \n          <Maestro classes={classes}/> :\n          <Mossa />}\n      </ThemeProvider>\n    </div>\n  );\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}